var _user$project$Main$update = F2(
	function (msg, model) {
		var _p0 = msg;
		if (_p0.ctor === 'KeyDown') {
			return {
				ctor: '_Tuple2',
				_0: _elm_lang$core$Native_Utils.update(
					model,
					{
						keysDown: A2(_elm_lang$core$Set$insert, _p0._0, model.keysDown)
					}),
				_1: _elm_lang$core$Platform_Cmd$none
			};
		} else {
			return {
				ctor: '_Tuple2',
				_0: _elm_lang$core$Native_Utils.update(
					model,
					{
						keysDown: A2(_elm_lang$core$Set$remove, _p0._0, model.keysDown)
					}),
				_1: _elm_lang$core$Platform_Cmd$none
			};
		}
	});
var _user$project$Main$view = function (model) {
	return _elm_lang$html$Html$text(
		_elm_lang$core$Basics$toString(
			_elm_lang$core$List$sum(
				_elm_lang$core$Set$toList(model.keysDown))));
};
var _user$project$Main$initialModel = {keysDown: _elm_lang$core$Set$empty};
var _user$project$Main$Model = function (a) {
	return {keysDown: a};
};
var _user$project$Main$KeyUp = function (a) {
	return {ctor: 'KeyUp', _0: a};
};
var _user$project$Main$KeyDown = function (a) {
	return {ctor: 'KeyDown', _0: a};
};
var _user$project$Main$subscriptions = function (_p1) {
	return _elm_lang$core$Platform_Sub$batch(
		{
			ctor: '::',
			_0: _elm_lang$keyboard$Keyboard$downs(_user$project$Main$KeyDown),
			_1: {
				ctor: '::',
				_0: _elm_lang$keyboard$Keyboard$ups(_user$project$Main$KeyUp),
				_1: {ctor: '[]'}
			}
		});
};
var _user$project$Main$main = _elm_lang$html$Html$program(
	{
		init: {ctor: '_Tuple2', _0: _user$project$Main$initialModel, _1: _elm_lang$core$Platform_Cmd$none},
		view: _user$project$Main$view,
		update: _user$project$Main$update,
		subscriptions: _user$project$Main$subscriptions
	})();
